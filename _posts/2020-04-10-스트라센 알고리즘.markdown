---
layout: single
title:  "Strassen Algotithm"
date:   2020-04-10 20:39:08 +0900
categories: jekyll update
use_math: true
---


<h1>Strassen Algotithm</h1>

+ 쉬트라센 알고리즘 이란? 

  독일의 수학자 쉬트라센이 1969년에 만든 행렬 곱셈 알고리즘으로 기존 무식한 방식에 비해 시간복잡도가 더 낮은 O(n^2.81)을 보여준다.

+ 행렬 C는 행렬 A와 B의 연산으로 이루어지며 행렬 A와 B는 2n * 2n 의 크기를 지닌 다. (n은 임의의 정수이다.) 만약 2n * 2n이 아닐 경우 빈 자리를 0으로 채워 2n * 2n 꼴로 만들고 쉬트라센 행렬 곱을 진행한다.

+ 따라서 행렬 A, B, C는 서로 크기가 같은 4개의 부분 행렬로 분할이 가능하다.



<h3>strassen 기법</h3>


$$
\begin{pmatrix}C11 & C12 \\C21 & C22 \end{pmatrix}=\begin{pmatrix}A11 & A12 \\A21 & A22 \end{pmatrix}*\begin{pmatrix}B11 & B12 \\B21 & B22 \end{pmatrix}
$$

$$
C=\begin{bmatrix}M1+M4-M5+M7 & M3+M5 \\ M2+M4 & M1+M3-M2+M6\\
\end{bmatrix}
$$

```html
M1 = (A11+A22)(B11+B22)
M2 = (A21+A22)B11
M3 = A11(B12 – B22) 
M4 = A22(B21 – B11) 
M5 = (A11+A12)B22
M6 = (A21 – A11)(B11+B12)
M7 = (A12 – A22)(B21+B22)
```






<h3>Strassen Algorithm의 사용</h3>

실제 컴퓨터에서 돌리면, 속도가 더 느리게 나온다고 하는데 이는 Strassen Algorithm의 O-Notation앞에 엄청 큰 상수가 곱해지기 때문이다.

따라서, Strassen Algorithm이 행렬의 곱셈 보다 더 빠르게 수행되기 위해선 엄청 큰 n이 필요하며 너무 큰 n의 크기에 의해 주로 슈퍼 컴퓨터에 사용된다.

 Strassen Algorithm의 놀라운 점은 O(n^3)의 속도가 깨지지 않을 것이라 생각했는데

이보다 작은 시간이 나왔다는 것이 놀라운 이유이다. 현재도 Strassen Algorithm보다 더 빠른 알고리즘이 몇 나왔지만 성능차이가 크지 않고

P~V와 같은 것들이 훨씬 많아서 사용할 수 없다.

더 빠른 성능이 있는데, 아직까지 최적의 알고리즘을 찾지 못한 상태일 것이다.

